# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'trainControllerSoftware_MainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import QTimer
from functools import partial
from trainControllerSoftware_TestSecondWindow import Ui_Test_SecondWindow
from manualControl import ManualControl as ms
from Control import Control as c
from simple_pid import PID


class Ui_TrainControllerSW_MainWindow(object): 
    def setupUi(self, TrainControllerSW_MainWindow):
        ##
        self.speed_limit = 0
        self.authority_value = 0
        self.speed_display_value = 0
        self.power_failure_value = 0
        ##
        
        self.commanded_speed = 0
        self.current_speed = 0
        self.kp = 0
        self.ki = 0
        self.pid = PID(self.kp, self.ki, 0.1, setpoint=self.commanded_speed)
        self.pid.output_limits = (0, 120000) #clamp at 120W
        
        TrainControllerSW_MainWindow.setObjectName("TrainControllerSW_MainWindow")
        TrainControllerSW_MainWindow.resize(835, 423)
        TrainControllerSW_MainWindow.setAutoFillBackground(False)
        self.centralwidget = QtWidgets.QWidget(TrainControllerSW_MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_5 = QtWidgets.QLabel(self.centralwidget)
        self.label_5.setGeometry(QtCore.QRect(545, 170, 121, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.label_5.setFont(font)
        self.label_5.setAlignment(QtCore.Qt.AlignCenter)
        self.label_5.setObjectName("label_5")
        self.currentSpeed_lcdDisplay = QtWidgets.QLCDNumber(self.centralwidget)
        self.currentSpeed_lcdDisplay.setGeometry(QtCore.QRect(740, 30, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.currentSpeed_lcdDisplay.setFont(font)
        self.currentSpeed_lcdDisplay.setObjectName("currentSpeed_lcdDisplay")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(1360, 20, 71, 30))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.TabWigets = QtWidgets.QTabWidget(self.centralwidget)
        self.TabWigets.setGeometry(QtCore.QRect(20, 10, 521, 381))
        self.TabWigets.setObjectName("TabWigets")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.ManualMode_GroupBox = QtWidgets.QGroupBox(self.tab)
        self.ManualMode_GroupBox.setGeometry(QtCore.QRect(10, 10, 501, 321))
        self.ManualMode_GroupBox.setObjectName("ManualMode_GroupBox")
        self.VitalControlFrame_2 = QtWidgets.QFrame(self.ManualMode_GroupBox)
        self.VitalControlFrame_2.setGeometry(QtCore.QRect(20, 30, 201, 271))
        self.VitalControlFrame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.VitalControlFrame_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.VitalControlFrame_2.setObjectName("VitalControlFrame_2")
        self.label_11 = QtWidgets.QLabel(self.VitalControlFrame_2)
        self.label_11.setGeometry(QtCore.QRect(0, 0, 181, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.label_11.setFont(font)
        self.label_11.setAlignment(QtCore.Qt.AlignCenter)
        self.label_11.setObjectName("label_11")
        self.Auto_SpeedDisplay = QtWidgets.QLCDNumber(self.VitalControlFrame_2)
        self.Auto_SpeedDisplay.setGeometry(QtCore.QRect(110, 50, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.Auto_SpeedDisplay.setFont(font)
        self.Auto_SpeedDisplay.setObjectName("Auto_SpeedDisplay")
        self.label_13 = QtWidgets.QLabel(self.VitalControlFrame_2)
        self.label_13.setGeometry(QtCore.QRect(10, 50, 91, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_13.setFont(font)
        self.label_13.setObjectName("label_13")
        self.label_14 = QtWidgets.QLabel(self.VitalControlFrame_2)
        self.label_14.setGeometry(QtCore.QRect(10, 150, 91, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_14.setFont(font)
        self.label_14.setObjectName("label_14")
        self.Auto_CommandedSpeedDisplay = QtWidgets.QLCDNumber(self.VitalControlFrame_2)
        self.Auto_CommandedSpeedDisplay.setGeometry(QtCore.QRect(110, 100, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.Auto_CommandedSpeedDisplay.setFont(font)
        self.Auto_CommandedSpeedDisplay.setObjectName("Auto_CommandedSpeedDisplay")
        self.Auto_BrakingDisplay = QtWidgets.QLCDNumber(self.VitalControlFrame_2)
        self.Auto_BrakingDisplay.setGeometry(QtCore.QRect(110, 150, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.Auto_BrakingDisplay.setFont(font)
        self.Auto_BrakingDisplay.setObjectName("Auto_BrakingDisplay")
        self.label_15 = QtWidgets.QLabel(self.ManualMode_GroupBox)
        self.label_15.setGeometry(QtCore.QRect(30, 130, 101, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_15.setFont(font)
        self.label_15.setWordWrap(True)
        self.label_15.setObjectName("label_15")
        self.VitalControlFrame = QtWidgets.QFrame(self.ManualMode_GroupBox)
        self.VitalControlFrame.setGeometry(QtCore.QRect(250, 30, 231, 271))
        self.VitalControlFrame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.VitalControlFrame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.VitalControlFrame.setObjectName("VitalControlFrame")
        self.label_16 = QtWidgets.QLabel(self.VitalControlFrame)
        self.label_16.setGeometry(QtCore.QRect(-10, 0, 251, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.label_16.setFont(font)
        self.label_16.setAlignment(QtCore.Qt.AlignCenter)
        self.label_16.setObjectName("label_16")
        self.label_18 = QtWidgets.QLabel(self.VitalControlFrame)
        self.label_18.setGeometry(QtCore.QRect(10, 70, 101, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_18.setFont(font)
        self.label_18.setObjectName("label_18")
        self.Temperature_DisplayBox = QtWidgets.QLCDNumber(self.VitalControlFrame)
        self.Temperature_DisplayBox.setGeometry(QtCore.QRect(130, 230, 71, 31))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.Temperature_DisplayBox.setFont(font)
        self.Temperature_DisplayBox.setObjectName("Temperature_DisplayBox")
        self.label_20 = QtWidgets.QLabel(self.VitalControlFrame)
        self.label_20.setGeometry(QtCore.QRect(10, 100, 101, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_20.setFont(font)
        self.label_20.setObjectName("label_20")
        self.InternalLights_DisplayBox = QtWidgets.QCheckBox(self.VitalControlFrame)
        self.InternalLights_DisplayBox.setGeometry(QtCore.QRect(180, 50, 31, 24))
        self.InternalLights_DisplayBox.setText("")
        self.InternalLights_DisplayBox.setObjectName("InternalLights_DisplayBox")
        self.InternalLights_DisplayCheck_3 = QtWidgets.QCheckBox(self.VitalControlFrame)
        self.InternalLights_DisplayCheck_3.setGeometry(QtCore.QRect(320, 70, 31, 24))
        self.InternalLights_DisplayCheck_3.setText("")
        self.InternalLights_DisplayCheck_3.setObjectName("InternalLights_DisplayCheck_3")
        self.label_19 = QtWidgets.QLabel(self.VitalControlFrame)
        self.label_19.setGeometry(QtCore.QRect(10, 40, 101, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_19.setFont(font)
        self.label_19.setObjectName("label_19")
        self.label_21 = QtWidgets.QLabel(self.VitalControlFrame)
        self.label_21.setGeometry(QtCore.QRect(10, 130, 101, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_21.setFont(font)
        self.label_21.setObjectName("label_21")
        self.ExternalLights_DisplayBox = QtWidgets.QCheckBox(self.VitalControlFrame)
        self.ExternalLights_DisplayBox.setGeometry(QtCore.QRect(180, 80, 31, 24))
        self.ExternalLights_DisplayBox.setText("")
        self.ExternalLights_DisplayBox.setObjectName("ExternalLights_DisplayBox")
        self.LeftDoors_DisplayBox = QtWidgets.QCheckBox(self.VitalControlFrame)
        self.LeftDoors_DisplayBox.setGeometry(QtCore.QRect(180, 110, 31, 24))
        self.LeftDoors_DisplayBox.setText("")
        self.LeftDoors_DisplayBox.setObjectName("LeftDoors_DisplayBox")
        self.RightDoors_DisplayBox = QtWidgets.QCheckBox(self.VitalControlFrame)
        self.RightDoors_DisplayBox.setGeometry(QtCore.QRect(180, 140, 31, 24))
        self.RightDoors_DisplayBox.setText("")
        self.RightDoors_DisplayBox.setObjectName("RightDoors_DisplayBox")
        self.Advertisements_DisplayBox = QtWidgets.QCheckBox(self.VitalControlFrame)
        self.Advertisements_DisplayBox.setGeometry(QtCore.QRect(180, 170, 31, 24))
        self.Advertisements_DisplayBox.setText("")
        self.Advertisements_DisplayBox.setObjectName("Advertisements_DisplayBox")
        self.Announcements_DisplayBox = QtWidgets.QCheckBox(self.VitalControlFrame)
        self.Announcements_DisplayBox.setGeometry(QtCore.QRect(180, 200, 31, 24))
        self.Announcements_DisplayBox.setText("")
        self.Announcements_DisplayBox.setObjectName("Announcements_DisplayBox")
        self.label_22 = QtWidgets.QLabel(self.VitalControlFrame)
        self.label_22.setGeometry(QtCore.QRect(10, 160, 111, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_22.setFont(font)
        self.label_22.setObjectName("label_22")
        self.label_24 = QtWidgets.QLabel(self.VitalControlFrame)
        self.label_24.setGeometry(QtCore.QRect(10, 190, 111, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_24.setFont(font)
        self.label_24.setObjectName("label_24")
        self.label_23 = QtWidgets.QLabel(self.VitalControlFrame)
        self.label_23.setGeometry(QtCore.QRect(10, 220, 111, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_23.setFont(font)
        self.label_23.setObjectName("label_23")
        self.TabWigets.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.Manual_Frame = QtWidgets.QGroupBox(self.tab_2)
        self.Manual_Frame.setGeometry(QtCore.QRect(10, 10, 471, 321))
        self.Manual_Frame.setObjectName("Manual_Frame")
        self.Manual_Advertisements_CheckBox = QtWidgets.QCheckBox(self.Manual_Frame)
        self.Manual_Advertisements_CheckBox.setGeometry(QtCore.QRect(390, 150, 61, 23))
        self.Manual_Advertisements_CheckBox.setObjectName("Manual_Advertisements_CheckBox")
        self.label_10 = QtWidgets.QLabel(self.Manual_Frame)
        self.label_10.setGeometry(QtCore.QRect(150, 100, 91, 41))
        font = QtGui.QFont()
        font.setBold(True)
        self.label_10.setFont(font)
        self.label_10.setObjectName("label_10")
        self.speed_Slider = QtWidgets.QSlider(self.Manual_Frame)
        self.speed_Slider.setGeometry(QtCore.QRect(20, 80, 121, 22))
        self.speed_Slider.setOrientation(QtCore.Qt.Horizontal)
        self.speed_Slider.setObjectName("speed_Slider")
        self.label_3 = QtWidgets.QLabel(self.Manual_Frame)
        self.label_3.setGeometry(QtCore.QRect(240, 70, 67, 17))
        font = QtGui.QFont()
        font.setBold(True)
        self.label_3.setFont(font)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.Manual_Annoucements_CheckBox = QtWidgets.QCheckBox(self.Manual_Frame)
        self.Manual_Annoucements_CheckBox.setGeometry(QtCore.QRect(390, 180, 61, 23))
        self.Manual_Annoucements_CheckBox.setObjectName("Manual_Annoucements_CheckBox")
        self.Manual_temperature_box = QtWidgets.QDoubleSpinBox(self.Manual_Frame)
        self.Manual_temperature_box.setGeometry(QtCore.QRect(360, 30, 91, 32))
        self.Manual_temperature_box.setMinimum(0.0)
        self.Manual_temperature_box.setMaximum(90.0)
        self.Manual_temperature_box.setProperty("value", 0.0)
        self.Manual_temperature_box.setObjectName("Manual_temperature_box")
        self.braking_Slider = QtWidgets.QSlider(self.Manual_Frame)
        self.braking_Slider.setGeometry(QtCore.QRect(20, 150, 121, 22))
        self.braking_Slider.setOrientation(QtCore.Qt.Horizontal)
        self.braking_Slider.setObjectName("braking_Slider")
        self.braking_Slider.setMaximum(1)
        self.Manual_Braking_lcdDisplay = QtWidgets.QLCDNumber(self.Manual_Frame)
        self.Manual_Braking_lcdDisplay.setGeometry(QtCore.QRect(150, 140, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.Manual_Braking_lcdDisplay.setFont(font)
        self.Manual_Braking_lcdDisplay.setObjectName("Manual_Braking_lcdDisplay")
        self.Manual_CommandedSpeed_lcdDisplay = QtWidgets.QLCDNumber(self.Manual_Frame)
        self.Manual_CommandedSpeed_lcdDisplay.setGeometry(QtCore.QRect(150, 60, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.Manual_CommandedSpeed_lcdDisplay.setFont(font)
        self.Manual_CommandedSpeed_lcdDisplay.setObjectName("Manual_CommandedSpeed_lcdDisplay")
        self.line = QtWidgets.QFrame(self.Manual_Frame)
        self.line.setGeometry(QtCore.QRect(230, 30, 20, 271))
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.Manual_lights_ComboBox = QtWidgets.QComboBox(self.Manual_Frame)
        self.Manual_lights_ComboBox.setGeometry(QtCore.QRect(360, 70, 91, 26))
        self.Manual_lights_ComboBox.setObjectName("Manual_lights_ComboBox")
        self.Manual_lights_ComboBox.addItem("")
        self.Manual_lights_ComboBox.addItem("")
        self.Manual_lights_ComboBox.addItem("")
        self.Manual_lights_ComboBox.addItem("")
        self.Manual_doors_ComboBox = QtWidgets.QComboBox(self.Manual_Frame)
        self.Manual_doors_ComboBox.setGeometry(QtCore.QRect(360, 110, 91, 26))
        self.Manual_doors_ComboBox.setObjectName("Manual_doors_ComboBox")
        self.Manual_doors_ComboBox.addItem("")
        self.Manual_doors_ComboBox.addItem("")
        self.Manual_doors_ComboBox.addItem("")
        self.Manual_doors_ComboBox.addItem("")
        self.label_4 = QtWidgets.QLabel(self.Manual_Frame)
        self.label_4.setGeometry(QtCore.QRect(240, 110, 67, 17))
        font = QtGui.QFont()
        font.setBold(True)
        self.label_4.setFont(font)
        self.label_4.setAlignment(QtCore.Qt.AlignCenter)
        self.label_4.setObjectName("label_4")
        self.label_8 = QtWidgets.QLabel(self.Manual_Frame)
        self.label_8.setGeometry(QtCore.QRect(240, 180, 121, 20))
        font = QtGui.QFont()
        font.setBold(True)
        self.label_8.setFont(font)
        self.label_8.setAlignment(QtCore.Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.label_2 = QtWidgets.QLabel(self.Manual_Frame)
        self.label_2.setGeometry(QtCore.QRect(80, 20, 161, 41))
        font = QtGui.QFont()
        font.setBold(True)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.label_12 = QtWidgets.QLabel(self.Manual_Frame)
        self.label_12.setGeometry(QtCore.QRect(240, 150, 121, 20))
        font = QtGui.QFont()
        font.setBold(True)
        self.label_12.setFont(font)
        self.label_12.setAlignment(QtCore.Qt.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.label_9 = QtWidgets.QLabel(self.Manual_Frame)
        self.label_9.setGeometry(QtCore.QRect(240, 30, 111, 22))
        font = QtGui.QFont()
        font.setBold(True)
        font.setKerning(False)
        self.label_9.setFont(font)
        self.label_9.setAlignment(QtCore.Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.ManuLebrake_button = QtWidgets.QPushButton(self.Manual_Frame)
        self.ManuLebrake_button.setGeometry(QtCore.QRect(50, 200, 141, 91))
        font = QtGui.QFont()
        font.setBold(True)
        self.ManuLebrake_button.setFont(font)
        self.ManuLebrake_button.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.ManuLebrake_button.setAutoFillBackground(False)
        self.ManuLebrake_button.setObjectName("ManuLebrake_button")
        self.label_6 = QtWidgets.QLabel(self.Manual_Frame)
        self.label_6.setGeometry(QtCore.QRect(510, 50, 161, 41))
        font = QtGui.QFont()
        font.setBold(True)
        self.label_6.setFont(font)
        self.label_6.setObjectName("label_6")
        self.TabWigets.addTab(self.tab_2, "")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.EngineerMode_Frame = QtWidgets.QGroupBox(self.tab_3)
        self.EngineerMode_Frame.setGeometry(QtCore.QRect(10, 10, 371, 80))
        self.EngineerMode_Frame.setObjectName("EngineerMode_Frame")
        self.label_31 = QtWidgets.QLabel(self.EngineerMode_Frame)
        self.label_31.setGeometry(QtCore.QRect(200, 40, 63, 20))
        self.label_31.setObjectName("label_31")       
        self.PowerOutput_lcdDisplay = QtWidgets.QLCDNumber(self.centralwidget)
        self.PowerOutput_lcdDisplay.setGeometry(QtCore.QRect(740, 130, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.PowerOutput_lcdDisplay.setFont(font)
        self.PowerOutput_lcdDisplay.setObjectName("PowerOutput_lcdDisplay")
        
        self.setKp_Box = QtWidgets.QDoubleSpinBox(self.EngineerMode_Frame)
        self.setKp_Box.setGeometry(QtCore.QRect(90, 30, 91, 32))
        self.setKp_Box.setMinimum(0.0)
        self.setKp_Box.setMaximum(90.0)
        self.setKp_Box.setProperty("value", 0.0)
        self.setKp_Box.setObjectName("setKp_Box")
        self.label = QtWidgets.QLabel(self.EngineerMode_Frame)
        self.label.setGeometry(QtCore.QRect(30, 40, 63, 20))
        self.label.setObjectName("label")
        self.setKi_Box = QtWidgets.QDoubleSpinBox(self.EngineerMode_Frame)
        self.setKi_Box.setGeometry(QtCore.QRect(250, 30, 91, 32))
        self.setKi_Box.setMinimum(00.0)
        self.setKi_Box.setMaximum(90.0)
        self.setKi_Box.setProperty("value", 0.0)
        self.setKi_Box.setObjectName("setKi_Box")
        self.TabWigets.addTab(self.tab_3, "")
        self.OpenTestUI = QtWidgets.QPushButton(self.centralwidget)        
        self.OpenTestUI.setGeometry(QtCore.QRect(720, 320, 93, 29))
        self.OpenTestUI.setObjectName("OpenTestUI")
        self.ImportTestData = QtWidgets.QPushButton(self.centralwidget)
        self.ImportTestData.setGeometry(QtCore.QRect(720, 360, 93, 29))
        self.ImportTestData.setObjectName("ImportTestData")
        
        self.label_17 = QtWidgets.QLabel(self.centralwidget)
        self.label_17.setGeometry(QtCore.QRect(540, 80, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.label_17.setFont(font)
        self.label_17.setAlignment(QtCore.Qt.AlignCenter)
        self.label_17.setObjectName("label_17")
        self.Authority_lcdDisplay = QtWidgets.QLCDNumber(self.centralwidget)
        self.Authority_lcdDisplay.setGeometry(QtCore.QRect(740, 80, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.Authority_lcdDisplay.setFont(font)
        self.Authority_lcdDisplay.setObjectName("Authority_lcdDisplay")
        self.faultsframe = QtWidgets.QFrame(self.centralwidget)
        self.faultsframe.setGeometry(QtCore.QRect(550, 230, 111, 161))
        self.faultsframe.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.faultsframe.setFrameShadow(QtWidgets.QFrame.Plain)
        self.faultsframe.setObjectName("faultsframe")
        self.label_7 = QtWidgets.QLabel(self.faultsframe)
        self.label_7.setGeometry(QtCore.QRect(0, -10, 111, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.label_7.setFont(font)
        self.label_7.setAlignment(QtCore.Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.label_27 = QtWidgets.QLabel(self.faultsframe)
        self.label_27.setGeometry(QtCore.QRect(10, 20, 61, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_27.setFont(font)
        self.label_27.setObjectName("label_27")
        self.label_29 = QtWidgets.QLabel(self.faultsframe)
        self.label_29.setGeometry(QtCore.QRect(10, 50, 51, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_29.setFont(font)
        self.label_29.setObjectName("label_29")
        self.EngineFault_DisplayBox = QtWidgets.QCheckBox(self.faultsframe)
        self.EngineFault_DisplayBox.setGeometry(QtCore.QRect(80, 30, 31, 24))
        self.EngineFault_DisplayBox.setText("")
        self.EngineFault_DisplayBox.setCheckable(False)
        self.EngineFault_DisplayBox.setObjectName("EngineFault_DisplayBox")
        self.PowerFault_DisplayBox = QtWidgets.QCheckBox(self.faultsframe)
        self.PowerFault_DisplayBox.setGeometry(QtCore.QRect(80, 60, 31, 24))
        self.PowerFault_DisplayBox.setText("")
        self.PowerFault_DisplayBox.setCheckable(False)
        self.PowerFault_DisplayBox.setObjectName("PowerFault_DisplayBox")
        self.CircuitFault_DisplayBox = QtWidgets.QCheckBox(self.faultsframe)
        self.CircuitFault_DisplayBox.setGeometry(QtCore.QRect(80, 120, 21, 24))
        self.CircuitFault_DisplayBox.setText("")
        self.CircuitFault_DisplayBox.setCheckable(False)
        self.CircuitFault_DisplayBox.setObjectName("CircuitFault_DisplayBox")
        self.TrackFault_DisplayBox = QtWidgets.QCheckBox(self.faultsframe)
        self.TrackFault_DisplayBox.setGeometry(QtCore.QRect(80, 90, 31, 24))
        self.TrackFault_DisplayBox.setText("")
        self.TrackFault_DisplayBox.setCheckable(False)
        self.TrackFault_DisplayBox.setObjectName("TrackFault_DisplayBox")
        self.label_28 = QtWidgets.QLabel(self.faultsframe)
        self.label_28.setGeometry(QtCore.QRect(10, 80, 61, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_28.setFont(font)
        self.label_28.setObjectName("label_28")
        self.label_30 = QtWidgets.QLabel(self.faultsframe)
        self.label_30.setGeometry(QtCore.QRect(10, 110, 51, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_30.setFont(font)
        self.label_30.setObjectName("label_30")
        self.next_station_label = QtWidgets.QLabel(self.centralwidget)
        self.next_station_label.setGeometry(QtCore.QRect(740, 170, 71, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setUnderline(False)
        self.next_station_label.setFont(font)
        self.next_station_label.setAutoFillBackground(False)
        self.next_station_label.setWordWrap(True)
        self.next_station_label.setObjectName("next_station_label")
        self.label_25 = QtWidgets.QLabel(self.centralwidget)
        self.label_25.setGeometry(QtCore.QRect(530, 30, 201, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.label_25.setFont(font)
        self.label_25.setAlignment(QtCore.Qt.AlignCenter)
        self.label_25.setObjectName("label_25")
        
        self.label_26 = QtWidgets.QLabel(self.centralwidget)
        self.label_26.setGeometry(QtCore.QRect(558, 125, 161, 41))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(True)
        self.label_26.setFont(font)
        self.label_26.setObjectName("label_26")
        
        font = QtGui.QFont()
        font.setBold(True)
        
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        self.frame = QtWidgets.QFrame(self.centralwidget)
        self.frame.setGeometry(QtCore.QRect(700, 230, 111, 41))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frame.setObjectName("frame")
        self.EmergencyBrakeDisplayBox = QtWidgets.QCheckBox(self.frame)
        self.EmergencyBrakeDisplayBox.setGeometry(QtCore.QRect(80, 10, 31, 24))
        self.EmergencyBrakeDisplayBox.setText("")
        self.EmergencyBrakeDisplayBox.setCheckable(False)
        self.EmergencyBrakeDisplayBox.setObjectName("EmergencyBrakeDisplayBox")
        self.label_33 = QtWidgets.QLabel(self.frame)
        self.label_33.setGeometry(QtCore.QRect(10, 0, 61, 41))
        font = QtGui.QFont()
        font.setBold(False)
        self.label_33.setFont(font)
        self.label_33.setWordWrap(True)
        self.label_33.setObjectName("label_33")
        TrainControllerSW_MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(TrainControllerSW_MainWindow)
        self.statusbar.setObjectName("statusbar")
        TrainControllerSW_MainWindow.setStatusBar(self.statusbar)
        self.DisplayPower = QtWidgets.QPushButton(self.centralwidget)
        self.DisplayPower.setGeometry(QtCore.QRect(720, 280, 93, 29))
        self.DisplayPower.setObjectName("DisplayPower")

        
        
        self.TestWindow =  QtWidgets.QMainWindow()
        self.ui = Ui_Test_SecondWindow()
        self.ui.__init__()
        self.ui.setupUi(self.TestWindow)
        self.timer = QtCore.QTimer()
                
        
        self.retranslateUi(TrainControllerSW_MainWindow)
        self.TabWigets.setCurrentIndex(2)
        self.speed_Slider.valueChanged['int'].connect(self.Manual_CommandedSpeed_lcdDisplay.display)
        self.Manual_temperature_box.valueChanged['double'].connect(self.Manual_temperature_box.setValue)
        self.braking_Slider.valueChanged['int'].connect(self.Manual_Braking_lcdDisplay.display)
        QtCore.QMetaObject.connectSlotsByName(TrainControllerSW_MainWindow)

    def retranslateUi(self, TrainControllerSW_MainWindow):
        _translate = QtCore.QCoreApplication.translate
        TrainControllerSW_MainWindow.setWindowTitle(_translate("TrainControllerSW_MainWindow", "MainWindow"))
        self.label_5.setText(_translate("TrainControllerSW_MainWindow", "Next Station:"))
        self.pushButton.setText(_translate("TrainControllerSW_MainWindow", "I/0"))
        self.ManualMode_GroupBox.setTitle(_translate("TrainControllerSW_MainWindow", "Automatic Mode"))
        self.label_11.setText(_translate("TrainControllerSW_MainWindow", "Vital Controls"))
        self.label_13.setText(_translate("TrainControllerSW_MainWindow", "Speed(MPH)"))
        self.label_14.setText(_translate("TrainControllerSW_MainWindow", "Braking"))
        self.label_15.setText(_translate("TrainControllerSW_MainWindow", "Commanded Speed(MPH)"))
        self.label_16.setText(_translate("TrainControllerSW_MainWindow", "Non-Vital Controls"))
        self.label_18.setText(_translate("TrainControllerSW_MainWindow", "External Lights"))
        self.label_20.setText(_translate("TrainControllerSW_MainWindow", "Left Doors"))
        self.label_19.setText(_translate("TrainControllerSW_MainWindow", "Internal Lights"))
        self.label_21.setText(_translate("TrainControllerSW_MainWindow", "Right Doors"))
        self.label_22.setText(_translate("TrainControllerSW_MainWindow", "Advertisements"))
        self.label_24.setText(_translate("TrainControllerSW_MainWindow", "Announcements"))
        self.label_23.setText(_translate("TrainControllerSW_MainWindow", "Temperature (F)"))
        self.TabWigets.setTabText(self.TabWigets.indexOf(self.tab), _translate("TrainControllerSW_MainWindow", "Automatic Mode"))
        self.Manual_Frame.setTitle(_translate("TrainControllerSW_MainWindow", "Manual Mode"))
        self.Manual_Advertisements_CheckBox.setText(_translate("TrainControllerSW_MainWindow", "On/Off"))
        self.label_10.setText(_translate("TrainControllerSW_MainWindow", "Braking"))
        self.label_3.setText(_translate("TrainControllerSW_MainWindow", "Lights"))
        self.Manual_Annoucements_CheckBox.setText(_translate("TrainControllerSW_MainWindow", "On/Off"))
        self.Manual_lights_ComboBox.setItemText(0, _translate("TrainControllerSW_MainWindow", "Off"))
        self.Manual_lights_ComboBox.setItemText(1, _translate("TrainControllerSW_MainWindow", "Internal"))
        self.Manual_lights_ComboBox.setItemText(2, _translate("TrainControllerSW_MainWindow", "External"))
        self.Manual_lights_ComboBox.setItemText(3, _translate("TrainControllerSW_MainWindow", "Both"))
        self.Manual_doors_ComboBox.setItemText(0, _translate("TrainControllerSW_MainWindow", "Closed"))
        self.Manual_doors_ComboBox.setItemText(1, _translate("TrainControllerSW_MainWindow", "Left"))
        self.Manual_doors_ComboBox.setItemText(2, _translate("TrainControllerSW_MainWindow", "Right"))
        self.Manual_doors_ComboBox.setItemText(3, _translate("TrainControllerSW_MainWindow", "Both"))
        self.label_4.setText(_translate("TrainControllerSW_MainWindow", "Doors"))
        self.label_8.setText(_translate("TrainControllerSW_MainWindow", "Announcements"))
        self.label_2.setText(_translate("TrainControllerSW_MainWindow", "Commanded Speed(MPH)"))
        self.label_12.setText(_translate("TrainControllerSW_MainWindow", "Advertisements"))
        self.label_9.setText(_translate("TrainControllerSW_MainWindow", "Temperature(F)"))
        self.ManuLebrake_button.setText(_translate("TrainControllerSW_MainWindow", "Emergency Brake"))
        self.label_6.setText(_translate("TrainControllerSW_MainWindow", "Commanded Speed(MPH)"))
        self.TabWigets.setTabText(self.TabWigets.indexOf(self.tab_2), _translate("TrainControllerSW_MainWindow", "Manual/Driver Mode"))
        self.EngineerMode_Frame.setTitle(_translate("TrainControllerSW_MainWindow", "Engineer Mode"))
        self.label_31.setText(_translate("TrainControllerSW_MainWindow", "Set Ki:"))
        self.label.setText(_translate("TrainControllerSW_MainWindow", "Set Kp:"))
        self.TabWigets.setTabText(self.TabWigets.indexOf(self.tab_3), _translate("TrainControllerSW_MainWindow", "Engineer Mode"))
        self.OpenTestUI.setText(_translate("TrainControllerSW_MainWindow", "Open Test UI"))
        self.ImportTestData.setText(_translate("TrainControllerSW_MainWindow", "Import Test Data"))
        self.label_17.setText(_translate("TrainControllerSW_MainWindow", "Authority (miles):"))
        self.label_7.setText(_translate("TrainControllerSW_MainWindow", "Faults"))
        self.label_27.setText(_translate("TrainControllerSW_MainWindow", "Engine"))
        self.label_29.setText(_translate("TrainControllerSW_MainWindow", "Power"))
        self.label_28.setText(_translate("TrainControllerSW_MainWindow", "Track"))
        self.label_30.setText(_translate("TrainControllerSW_MainWindow", "Circuit"))
        self.next_station_label.setText(_translate("TrainControllerSW_MainWindow", "Station Square"))
        self.label_25.setText(_translate("TrainControllerSW_MainWindow", "Current Speed(mph):"))
        self.label_26.setText(_translate("TrainControllerSW_MainWindow", "Power (W):"))
        self.DisplayPower.setText(_translate("TrainControllerSW_MainWindow", "Display Power"))
        self.label_33.setText(_translate("TrainControllerSW_MainWindow", "Emergency Brake"))


 ###### Fake Test Cases lab
    def setAuthorityDisplayValue(self, pValue):
        self.authority_value = pValue
        
    def getAuthorityDisplayValue(self):
        return self.authority_value
    
    def setSpeedLimitDisplayValue(self, pValue):
        self.speed_limit = pValue
        
    def getSpeedLimitDisplayValue(self):
        return self.speed_limit

    def setSpeedDisplayValue(self, pValue):
        self.speed_display_value = pValue
        
    def getSpeedDisplayValue(self):
        if(self.speed_display_value > self.speed_limit):
            return self.speed_limit
        return self.speed_display_value
    
    def setPowerFailureDisplayValue(self, pValue):
        self.power_failure_value = pValue
        if(self.power_failure_value == True):
            self.setSpeedDisplayValue(self, 0)
        
##
    
####### Set Automatic/Main Displays
####### Input = trainData
####### Output = outputData
    def AuthorityDisplay(self, pValue):
        #self.milesValue = pValue * 0.621371
        self.Authority_lcdDisplay.display(c.getAuthority)
    
    def AutoSpeed(self, pValue):
        #self.milesValue = pValue * 0.621371
        self.Auto_SpeedDisplay.display(c.getSpeed)
        
    def AutoCommandedSpeed(self, pValue):
        #self.milesValue = pValue * 0.621371
        self.Auto_CommandedSpeedDisplay.display(c.getCommandedSpeed)    

    def AutoBraking(self, pValue):
        self.Auto_BrakingDisplay.display(c.getServiceBrake)
        
    def AutoInternalLights(self, pValue):
        self.InternalLights_DisplayBox.setCheckState(c.getInternalLights)
    
    def AutoExternalLights(self, pValue):
        self.ExternalLights_DisplayBox.setCheckState(c.getExternalLights)
    
    def AutoLeftDoors(self, pValue):
        self.LeftDoors_DisplayBox.setCheckState(c.getLeftDoor)
    
    def AutoRightDoors(self, pValue):
        self.RightDoors_DisplayBox.setCheckState(c.getRightDoor)

    def AutoAdvertisements(self, pValue):
        self.Advertisements_DisplayBox.setCheckState(c.getAdvertisements)
    
    def AutoAnnouncements(self, pValue):
        self.Announcements_DisplayBox.setCheckState(c.getAnnouncements)
    
    def AutoTemperature(self, pValue):
        self.Temperature_DisplayBox.display(c.getTemperature)
    
    def AutoEngineFault(self, pValue):
        self.EngineFault_DisplayBox.setCheckable(True)
        self.EngineFault_DisplayBox.setCheckState(pValue)  
        self.ActivateEmergencyBrake()
        
    def AutoPowerFault(self, pValue):
        self.PowerFault_DisplayBox.setCheckable(True)
        self.PowerFault_DisplayBox.setCheckState(pValue)
        self.ActivateEmergencyBrake()
        
    def AutoCircuitFault(self, pValue):
        self.CircuitFault_DisplayBox.setCheckable(True)
        self.CircuitFault_DisplayBox.setCheckState(pValue)
        self.ActivateEmergencyBrake()
        
    def AutoTrackFault(self, pValue):
        self.TrackFault_DisplayBox.setCheckable(True)
        self.TrackFault_DisplayBox.setCheckState(pValue)
        
    def EmergencyBrakeDisplay(self, pValue):
        self.EmergencyBrakeDisplayBox.setCheckable(True)
        self.EmergencyBrakeDisplayBox.setCheckState(pValue)
    
    def CurrentSpeed(self, pValue):
        #self.milesValue = pValue * 0.621371
        self.currentSpeed_lcdDisplay.display(c.getCurrentSpeed)
    
    def NextStation(self, pValue):
        #self.next_station_label.setText(c.getNextStation)
        pass   

#########  Test Input Data  
    def openTestWindow(self):
        self.timer.timeout.connect(self.getTestSpeed)
        self.timer.timeout.connect(self.getTestCommandedSpeed)
        self.timer.timeout.connect(self.getTestBraking)
        self.timer.timeout.connect(self.getTestLights)
        self.timer.timeout.connect(self.getTestDoors)
        self.timer.timeout.connect(self.getTestAdvertisements)
        self.timer.timeout.connect(self.getTestAnnoucements)
        self.timer.timeout.connect(self.getTestTemperature)
        self.timer.timeout.connect(self.getTestEngineFault)
        self.timer.timeout.connect(self.getTestPowerFault)
        self.timer.timeout.connect(self.getTestTrackFault)
        self.timer.timeout.connect(self.getTestCircuitFault)
        self.timer.timeout.connect(self.getTestAuthority)
        self.timer.timeout.connect(self.getTestCurrentSpeed)
        self.timer.timeout.connect(self.getTestNextStation)
        self.timer.timeout.connect(self.getEmergencyBrake)
        self.timer.timeout.connect(self.closeTestWindow)
        #self.timer.timeout.connect(self.getKpValue)
        #self.timer.timeout.connect(self.getKiValue)
        self.timer.start(1)
        self.TestWindow.show()
    
    def closeTestWindow(self):
        self.timer.timeout.disconnect(self.getTestSpeed)
        self.timer.timeout.disconnect(self.getTestCommandedSpeed)
        self.timer.timeout.disconnect(self.getTestBraking)
        self.timer.timeout.disconnect(self.getTestLights)
        self.timer.timeout.disconnect(self.getTestDoors)
        self.timer.timeout.disconnect(self.getTestAdvertisements)
        self.timer.timeout.disconnect(self.getTestAnnoucements)
        self.timer.timeout.disconnect(self.getTestTemperature)
        self.timer.timeout.disconnect(self.getTestEngineFault)
        self.timer.timeout.disconnect(self.getTestPowerFault)
        self.timer.timeout.disconnect(self.getTestTrackFault)
        self.timer.timeout.disconnect(self.getTestCircuitFault)
        self.timer.timeout.disconnect(self.getTestAuthority)
        self.timer.timeout.disconnect(self.getTestCurrentSpeed)
        self.timer.timeout.disconnect(self.getTestNextStation)
        self.timer.timeout.connect(self.getEmergencyBrake)
        self.timer.timeout.disconnect(self.closeTestWindow)
        self.timer.stop()        
         
    def getTestSpeed(self):
        self.AutoSpeed(self.ui.setSpeed())
    
    def getTestCommandedSpeed(self):
        self.AutoCommandedSpeed(self.ui.setCommandedSpeed())
    
    def getTestBraking(self):
       self.AutoBraking(self.ui.setBraking())
    
    def getTestAuthority(self):
        self.AuthorityDisplay(self.ui.setAuthority())
    
    # Lights: 0 - Off, 1 - Internal, 2 - External, 3 - Both
    def getTestLights(self):
        if(self.ui.setLights() == 1):
            self.AutoInternalLights(True)
            self.AutoExternalLights(False)
            
        elif(self.ui.setLights() == 2):
            self.AutoExternalLights(True)
            self.AutoInternalLights(False)
            
        elif(self.ui.setLights() == 3):
            self.AutoInternalLights(True)
            self.AutoExternalLights(True)
            
        else:
            self.AutoInternalLights(False)
            self.AutoExternalLights(False)
   
    # Doors: 0 - Closed, 1 - Left, 2 - Right, 3 - Both
    def getTestDoors(self):
        if(self.ui.setDoors() == 1):
            self.AutoLeftDoors(True)
            self.AutoRightDoors(False)
            
        elif(self.ui.setDoors() == 2):
            self.AutoRightDoors(True)
            self.AutoLeftDoors(False)
            
        elif(self.ui.setDoors() == 3):
            self.AutoLeftDoors(True)
            self.AutoRightDoors(True)
            
        else:
            self.AutoLeftDoors(False)
            self.AutoRightDoors(False)
        
    def getTestAdvertisements(self):
        self.AutoAdvertisements(self.ui.setAdvertisements())
    
    def getTestAnnoucements(self):
        self.AutoAnnouncements(self.ui.setAnnouncements())
    
    def getTestTemperature(self):
        self.AutoTemperature(self.ui.setTemperature())
    
    def getTestEngineFault(self):
        self.AutoEngineFault(self.ui.setEngineFault())
        if(self.ui.setEngineFault() == True):
            self.ActivateEmergencyBrake()
    
    def getTestPowerFault(self):
        self.AutoPowerFault(self.ui.setPowerFault())
        if(self.ui.setPowerFault() == True):
            self.ActivateEmergencyBrake()
    
    def getTestTrackFault(self):
        self.AutoTrackFault(self.ui.setTrackFault())
        if(self.ui.setTrackFault() == True):
            self.ActivateEmergencyBrake()
    
    def getTestCircuitFault(self):
        self.AutoCircuitFault(self.ui.setCircuitFault())
        if(self.ui.setCircuitFault() == True):
            self.ActivateEmergencyBrake()
    
    def getEmergencyBrake(self):
        self.EmergencyBrakeDisplay(self.ui.setEmergencyBrake())
        
    def getTestCurrentSpeed(self):
        self.CurrentSpeed(self.ui.setCurrentSpeed())
    
    def getTestNextStation(self):
        self.NextStation(self.ui.setNextStation())
        
    def getTestWindowClose(self):
        self.closeTestWindow()
        
####### ManualControl Class Sets
    def setManualControl_CommandedSpeed(self):
        ms.setCommandedSpeed(ms, self.speed_Slider.value())
        
    def setManualControl_ServiceBrake(self):
        ms.setServiceBrake(ms, self.braking_Slider.value())
    
    def setManualControl_EmergencyBrake(self):
        # if E brake is already set and the button is clicked, then it turns off the e brake
        if(self.EmergencyBrakeDisplayBox.isChecked() == True):
            ms.setEmergencyBrake(ms, False)
        elif(self.EmergencyBrakeDisplayBox.isChecked() == False):
            ms.setEmergencyBrake(ms, True)
        
    def setManualControl_Temperature(self):
        ms.setTemperature(ms, self.Manual_temperature_box.value())
    
    def setManualControl_Lights(self):
        if(self.Manual_lights_ComboBox.currentIndex() == 0):
            ms.setInternalLights(ms, False)
            ms.setExternalLights(ms, False)
        elif(self.Manual_lights_ComboBox.currentIndex() == 1):
            ms.setInternalLights(ms, True)
            ms.setExternalLights(ms, False)
        elif(self.Manual_lights_ComboBox.currentIndex() == 2):
            ms.setInternalLights(ms, False)
            ms.setExternalLights(ms, True)
        elif(self.Manual_lights_ComboBox.currentIndex() == 3):
            ms.setInternalLights(ms, True)
            ms.setExternalLights(ms, True)                
    
    def setManualControl_Doors(self):
        if(self.Manual_doors_ComboBox.currentIndex() == 0):
            ms.setLeftDoor(ms, False)
            ms.setRightDoor(ms, False)
        elif(self.Manual_doors_ComboBox.currentIndex() == 0):
            ms.setLeftDoor(ms, True)
            ms.setRightDoor(ms, False)
        elif(self.Manual_doors_ComboBox.currentIndex() == 0):
            ms.setLeftDoor(ms, False)
            ms.setRightDoor(ms, True)
        elif(self.Manual_doors_ComboBox.currentIndex() == 0):
            ms.setLeftDoor(ms, True)
            ms.setRightDoor(ms, True)
    
    def setManualControl_Advertisements(self):
        ms.setAdvertisements(ms, self.Manual_Advertisements_CheckBox.checkState())
    
    def setManualControl_Announcements(self):
        ms.setAnnouncements(ms, self.Manual_Annoucements_CheckBox.checkState())

    # Power and Ebrake
    def ActivateEmergencyBrake(self):
        if(self.EmergencyBrakeDisplayBox.isChecked() == True):
            self.EmergencyBrakeDisplay(False)
            ms.setEmergencyBrake(ms, False)
        else:
            ms.setEmergencyBrake(ms, True)
            self.currentSpeed_lcdDisplay.display(0)
            self.speed_Slider.setValue(0)
            self.EmergencyBrakeDisplay(True)
            
    def setKpValue(self):
        self.kp = self.setKp_Box.value()
    
    def setKiValue(self):
        self.ki = self.setKi_Box.value()
        
    def setPID(self, kp_val, ki_val):
        self.kp = kp_val
        self.ki = ki_val
        self.pid = PID(self.kp, self.ki, 0.1, setpoint=(self.Manual_CommandedSpeed_lcdDisplay.value() * 0.621371))
        self.pid.output_limits = (0, 120000)
    
    def DisplayPowerOutput(self):
        self.pid.setpoint = (self.Manual_CommandedSpeed_lcdDisplay.value() * 0.621371)
        self.setPID(self.kp, self.ki)
        self.power = self.pid(self.Manual_CommandedSpeed_lcdDisplay.value() * 0.621371)
        self.PowerOutput_lcdDisplay.display(self.power)
        
####### Connects
    def ManualControl_Connect(self):
        self.speed_Slider.valueChanged.connect(self.setManualControl_CommandedSpeed)
        self.braking_Slider.valueChanged.connect(self.setManualControl_ServiceBrake)
        self.ManuLebrake_button.clicked.connect(self.setManualControl_EmergencyBrake)
        self.Manual_temperature_box.valueChanged.connect(self.setManualControl_Temperature)
        self.Manual_lights_ComboBox.currentIndexChanged.connect(self.setManualControl_Lights)
        self.Manual_doors_ComboBox.currentIndexChanged.connect(self.setManualControl_Doors)
        self.Manual_Advertisements_CheckBox.stateChanged.connect(self.setManualControl_Advertisements)
        self.Manual_Annoucements_CheckBox.stateChanged.connect(self.setManualControl_Announcements)
        
        self.timer.timeout.connect(self.setManualControl_CommandedSpeed)
        self.timer.timeout.connect(self.setManualControl_ServiceBrake)
        self.timer.timeout.connect(self.setManualControl_EmergencyBrake)
        self.timer.timeout.connect(self.setManualControl_Temperature)
        self.timer.timeout.connect(self.setManualControl_Lights)
        self.timer.timeout.connect(self.setManualControl_Doors)
        self.timer.timeout.connect(self.setManualControl_Advertisements)
        self.timer.timeout.connect(self.setManualControl_Announcements)

    def connect(self):
        self.ManuLebrake_button.clicked.connect(self.ActivateEmergencyBrake)
        self.setKp_Box.valueChanged.connect(self.setKpValue)
        self.setKi_Box.valueChanged.connect(self.setKiValue)
        self.OpenTestUI.clicked.connect(self.openTestWindow)
        self.ImportTestData.clicked.connect(self.openTestWindow)
        self.DisplayPower.clicked.connect(self.DisplayPowerOutput)
        
        self.timer.timeout.connect(self.ActivateEmergencyBrake)
        self.timer.timeout.connect(self.setKpValue)
        self.timer.timeout.connect(self.setKiValue)
        self.timer.timeout.connect(self.openTestWindow)
        self.timer.timeout.connect(self.DisplayPowerOutput)
        
if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    TrainControllerSW_MainWindow = QtWidgets.QMainWindow()
    ui = Ui_TrainControllerSW_MainWindow()
    ui.setupUi(TrainControllerSW_MainWindow)
    ui.connect()
    ui.ManualControl_Connect()
    TrainControllerSW_MainWindow.show()
    sys.exit(app.exec_())
